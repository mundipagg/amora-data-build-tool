from pathlib import Path

from amora.ai import PromptContext


def test_prompt_context():
    expected = """# amora-data-build-tool.amora.steps(id INTEGER,sourceName STRING,unit STRING,value FLOAT,device STRING,creationDate TIMESTAMP,startDate TIMESTAMP,endDate TIMESTAMP)
# amora-data-build-tool.amora.heart_rate_agg(year INTEGER,month INTEGER)
# amora-data-build-tool.amora.health(id INTEGER,type STRING,sourceName STRING,sourceVersion STRING,unit STRING,value FLOAT,device STRING,creationDate TIMESTAMP,startDate TIMESTAMP,endDate TIMESTAMP)
# amora-data-build-tool.amora.step_count_by_source(value_avg FLOAT,value_sum FLOAT,value_count INTEGER,source_name STRING,event_timestamp TIMESTAMP)
# amora-data-build-tool.amora.heart_rate_over100(unit STRING,value FLOAT,creationDate TIMESTAMP,id INTEGER)
# amora-data-build-tool.amora.heart_rate(id INTEGER,sourceName STRING,unit STRING,value FLOAT,device STRING,creationDate TIMESTAMP,startDate TIMESTAMP,endDate TIMESTAMP)
# amora-data-build-tool.amora.array_repeated_fields(str_arr STRING,int_arr INTEGER,id STRING)
# Column creationDate: Data de inserÃ§Ã£o dos dados
# Column device: Dispositivo de origem dos dados
# Column endDate: Data do fim da medida
# Column event_timestamp: Moment if time of which those features where observed
# Column id: Identificador Ãºnico da medida
# Column sourceName: Origem dos dados
# Column sourceVersion: VersÃ£o da origem de dados
# Column source_name: Source of the metric
# Column startDate: Data do inÃ­cio da medida
# Column type: Tipo da mÃ©trica coletada
# Column unit: Unidade de medida
# Column value: Valor observado
# Column value_avg: Average step count of the hour
# Column value_count: Count of step count samples of the hour
# Column value_sum: Sum of the step counts of the hour
# Table amora-data-build-tool.amora.array_repeated_fields: Example model with array columns
# Table amora-data-build-tool.amora.health: Health data exported by the Apple Health App
# Table amora-data-build-tool.amora.heart_rate: Undocumented! Generated by Amora Data Build Tool ðŸ’š
# Table amora-data-build-tool.amora.heart_rate_agg: Undocumented! Generated by Amora Data Build Tool ðŸ’š
# Table amora-data-build-tool.amora.heart_rate_over100: Undocumented! Generated by Amora Data Build Tool ðŸ’š
# Table amora-data-build-tool.amora.step_count_by_source: Undocumented! Generated by Amora Data Build Tool ðŸ’š
# Table amora-data-build-tool.amora.steps: Health automatically counts your steps, walking, and running distances. This table stores step measurement events
"""

    assert str(PromptContext.from_project()) == expected


def test_prompt_context_from_dbt_manifest():
    context = PromptContext.from_dbt_manifest(Path("dbt/manifest.json"))
    assert isinstance(context, PromptContext)
    assert (
        str(context)
        == """# amora-data-build-tool.diogo.steps(sourceName,sourceVersion,unit,creationDate,startDate,endDate,value,device)
# amora-data-build-tool.diogo.heart_rate(sourceName,sourceVersion,unit,creationDate,startDate,endDate,value,device)
# amora-data-build-tool.diogo.heart_agg()
# Column creationDate: Momento onde a medida foi salva
# Column device: dispositivo de origem da medida
# Column endDate: Fim da medida
# Column sourceName: nome da origem da medida
# Column sourceVersion: versao da origem de medida
# Column startDate: Inicio da medidade
# Column unit: unidade de medida
# Column value: valor registrado
# Table amora-data-build-tool.diogo.heart_agg: Daily aggregated heart rate data
# Table amora-data-build-tool.diogo.heart_rate: Heart rate data
# Table amora-data-build-tool.diogo.steps: Step count data"""
    )
