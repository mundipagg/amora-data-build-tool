name: pull-request
on: pull_request

env:
  gcp_service_account: ${{ secrets.GCP_SA_KEY }}
  AMORA_MODELS_PATH: "${{ github.workspace }}/tests/models"
  AMORA_TARGET_PATH: "${{ github.workspace }}/tests/target"
  AMORA_TARGET_PROJECT: amora-data-build-tool
  AMORA_TARGET_SCHEMA: amora
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
jobs:
  qa:
    name: 👀 Quality Assurance
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9"]
        experimental: [false]
        include:
          - python: "3.8"
            experimental: true
          - python: "3.10"
            experimental: true
    steps:
      - name: 🚧 Install OS dependencies
        run: sudo apt-get install libxml2-dev libxslt-dev

      - name: checkout
        uses: actions/checkout@v3

      - name: 🐍 Install python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: 🐍 Cache python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/cache
            ~/.cache
            !~/cache/exclude
          key: ${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('poetry.lock') }}

      - name: 🐍 Install Pip and Poetry
        run: pip install -U pip==21.2.4 poetry==1.1.9

      - name: 🐍 poetry install - Installing python dependencies
        run: poetry install --no-interaction -E feature-store -E dash
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - uses: dorny/paths-filter@v2
        name: Get modified files
        id: file_changes
        with:
          list-files: shell
          filters: |
            python:
              - added|modified: '**/*.py'
              - added|modified: '**/*.md'
              - added|modified: '**/*.rst'

      - name: 🧪 pre-commit
        if: ${{ steps.file_changes.outputs.python == 'true' }}
        run: pre-commit run --files ${{ steps.file_changes.outputs.python_files }}

      - name: 🧪 Mypy - Static type check
        run: mypy --xml-report .mypy_coverage --html-report .mypy_coverage --ignore-missing-imports --install-types --non-interactive --pretty --no-color-output amora

      - name: 🚧 GCP Auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ env.gcp_service_account }}

      - name: 🚧 Set up GCP SDK
        uses: "google-github-actions/setup-gcloud@v0"

      - name: 🧪 pytest
        run: py.test --headless --cov=amora --cov-report=term-missing --cov-report=xml ./tests

      - name: 🧪 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: ${{ matrix.python == '3.10' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 📤 Uploading coverage reports as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.python }}-coverage
          path: |
            coverage.xml
            .mypy_coverage
          retention-days: 7
